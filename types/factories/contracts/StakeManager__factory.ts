/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../common";
import type {
  StakeManager,
  StakeManagerInterface,
} from "../../contracts/StakeManager";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factoryAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minDelayBeforeStop",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_factoryAddress",
        type: "address",
      },
    ],
    name: "FarmFactorySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_farm",
        type: "address",
      },
    ],
    name: "RewardsReceived",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakeAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "addRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakeAddress",
        type: "address",
      },
    ],
    name: "lastStarted",
    outputs: [
      {
        internalType: "uint256",
        name: "timestano",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDelayBeforeStop",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_farms",
        type: "address[]",
      },
    ],
    name: "multiClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakeAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakeAddress",
        type: "address",
      },
    ],
    name: "recoverFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakeAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "recoverLeftoverReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factoryAddress",
        type: "address",
      },
    ],
    name: "setFarmFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delay",
        type: "uint256",
      },
    ],
    name: "setMinDelayBeforeStop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeFactory",
    outputs: [
      {
        internalType: "contract IStakeFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakeAddress",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_rewards",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "startEmission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakeAddress",
        type: "address",
      },
    ],
    name: "stopEmission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161176e38038061176e83398101604081905261002f9161010b565b610038336100bb565b6001600160a01b0382166100925760405162461bcd60e51b815260206004820152601a60248201527f5374616b654d616e616765723a205a45524f5f41444452455353000000000000604482015260640160405180910390fd5b600180546001600160a01b0319166001600160a01b039390931692909217909155600355610145565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806040838503121561011e57600080fd5b82516001600160a01b038116811461013557600080fd5b6020939093015192949293505050565b61161a806101546000396000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c80631171bda9146100ca57806323cb2390146100df5780633acd0be3146100f25780636da9c58e146101055780636e041d0014610118578063715018a61461012b5780637b7594571461013357806387e7ed3a146101665780638da5cb5b14610179578063908e8ed81461018e578063c74cd01414610197578063dd196f18146101aa578063f2d17639146101bd578063f2fde38b146101d0578063fe32a4bd146101e3575b600080fd5b6100dd6100d83660046111a9565b6101f6565b005b6100dd6100ed3660046111ea565b610374565b6100dd61010036600461128c565b6104e4565b6100dd61011336600461133e565b610730565b6100dd61012636600461133e565b610914565b6100dd6109c5565b61015361014136600461133e565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6100dd61017436600461133e565b6109d9565b610181610b10565b60405161015d9190611362565b61015360035481565b6100dd6101a5366004611376565b610b1f565b600154610181906001600160a01b031681565b6100dd6101cb3660046111ea565b610c5e565b6100dd6101de36600461133e565b610d97565b6100dd6101f1366004611404565b610e10565b8260008190506000816001600160a01b03166372f702f36040518163ffffffff1660e01b81526004016020604051808303816000875af115801561023e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610262919061141d565b6001546040516382dda22d60e01b81529192506001600160a01b03808616929116906382dda22d9061029a903390869060040161143a565b602060405180830381865afa1580156102b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102db919061141d565b6001600160a01b03161461030a5760405162461bcd60e51b815260040161030190611454565b60405180910390fd5b604051631171bda960e01b81526001600160a01b03871690631171bda99061033a90889033908990600401611485565b600060405180830381600087803b15801561035457600080fd5b505af1158015610368573d6000803e3d6000fd5b50505050505050505050565b8160008190506000816001600160a01b03166372f702f36040518163ffffffff1660e01b81526004016020604051808303816000875af11580156103bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e0919061141d565b6001546040516382dda22d60e01b81529192506001600160a01b03808616929116906382dda22d90610418903390869060040161143a565b602060405180830381865afa158015610435573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610459919061141d565b6001600160a01b03161461047f5760405162461bcd60e51b815260040161030190611454565b604051630700f9b360e21b81526001600160a01b03861690631c03e6cc906104ab908790600401611362565b600060405180830381600087803b1580156104c557600080fd5b505af11580156104d9573d6000803e3d6000fd5b505050505050505050565b8260008190506000816001600160a01b03166372f702f36040518163ffffffff1660e01b81526004016020604051808303816000875af115801561052c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610550919061141d565b6001546040516382dda22d60e01b81529192506001600160a01b03808616929116906382dda22d90610588903390869060040161143a565b602060405180830381865afa1580156105a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c9919061141d565b6001600160a01b0316146105ef5760405162461bcd60e51b815260040161030190611454565b8560005b86518110156106ab5761069b3389898481518110610613576106136114a9565b6020026020010151856001600160a01b0316637bb7bed1866040518263ffffffff1660e01b815260040161064991815260200190565b602060405180830381865afa158015610666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068a919061141d565b6001600160a01b0316929190610e1d565b6106a4816114d5565b90506105f3565b5060405163174f830160e11b81526001600160a01b03821690632e9f0602906106da90899089906004016114ee565b600060405180830381600087803b1580156106f457600080fd5b505af1158015610708573d6000803e3d6000fd5b5050506001600160a01b03909716600090815260026020526040902042905550505050505050565b8060008190506000816001600160a01b03166372f702f36040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c919061141d565b6001546040516382dda22d60e01b81529192506001600160a01b03808616929116906382dda22d906107d4903390869060040161143a565b602060405180830381865afa1580156107f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610815919061141d565b6001600160a01b03161461083b5760405162461bcd60e51b815260040161030190611454565b6003546001600160a01b038516600090815260026020526040902054429161086291611536565b11156108b05760405162461bcd60e51b815260206004820152601d60248201527f5374616b654d616e616765723a20544f4f5f53484f52545f44454c41590000006044820152606401610301565b6040516336d4e2c760e11b81526001600160a01b03851690636da9c58e906108dc903390600401611362565b600060405180830381600087803b1580156108f657600080fd5b505af115801561090a573d6000803e3d6000fd5b5050505050505050565b61091c610e7b565b6001600160a01b03811661096f5760405162461bcd60e51b815260206004820152601a6024820152795374616b654d616e616765723a205a45524f5f4144445245535360301b6044820152606401610301565b600180546001600160a01b0319166001600160a01b0383161790556040517f081d08ac089fbd8e494de9c8ecf6c4be22ad1b100ae31a788d48bec39334a070906109ba908390611362565b60405180910390a150565b6109cd610e7b565b6109d76000610eda565b565b8060008190506000816001600160a01b03166372f702f36040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610a21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a45919061141d565b6001546040516382dda22d60e01b81529192506001600160a01b03808616929116906382dda22d90610a7d903390869060040161143a565b602060405180830381865afa158015610a9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abe919061141d565b6001600160a01b031614610ae45760405162461bcd60e51b815260040161030190611454565b6040516343f3f69d60e11b81526001600160a01b038516906387e7ed3a906108dc903390600401611362565b6000546001600160a01b031690565b601e815110610b6f5760405162461bcd60e51b815260206004820152601c60248201527b5374616b654d616e616765723a20544f4f5f4d414e595f4641524d5360201b6044820152606401610301565b60005b8151811015610c5a576000828281518110610b8f57610b8f6114a9565b60200260200101519050806001600160a01b03166379ee54f7336040518263ffffffff1660e01b8152600401610bc59190611362565b600060405180830381600087803b158015610bdf57600080fd5b505af1158015610bf3573d6000803e3d6000fd5b505050507fab3d721de7558ed8926b5577897ff28185aad98b1dfaffc0ec27d021dbb235e5838381518110610c2a57610c2a6114a9565b6020026020010151604051610c3f9190611362565b60405180910390a15080610c52816114d5565b915050610b72565b5050565b8160008190506000816001600160a01b03166372f702f36040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610ca6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cca919061141d565b6001546040516382dda22d60e01b81529192506001600160a01b03808616929116906382dda22d90610d02903390869060040161143a565b602060405180830381865afa158015610d1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d43919061141d565b6001600160a01b031614610d695760405162461bcd60e51b815260040161030190611454565b60405163f2d1763960e01b81526001600160a01b0386169063f2d17639906104ab908790339060040161143a565b610d9f610e7b565b6001600160a01b038116610e045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610301565b610e0d81610eda565b50565b610e18610e7b565b600355565b610e75846323b872dd60e01b858585604051602401610e3e93929190611485565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f2a565b50505050565b33610e84610b10565b6001600160a01b0316146109d75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610301565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610f7f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110049092919063ffffffff16565b9050805160001480610fa0575080806020019051810190610fa0919061154f565b610fff5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610301565b505050565b6060611013848460008561101b565b949350505050565b60608247101561107c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610301565b600080866001600160a01b031685876040516110989190611595565b60006040518083038185875af1925050503d80600081146110d5576040519150601f19603f3d011682016040523d82523d6000602084013e6110da565b606091505b50915091506110eb878383876110f6565b979650505050505050565b6060831561116557825160000361115e576001600160a01b0385163b61115e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610301565b5081611013565b611013838381511561117a5781518083602001fd5b8060405162461bcd60e51b815260040161030191906115b1565b6001600160a01b0381168114610e0d57600080fd5b6000806000606084860312156111be57600080fd5b83356111c981611194565b925060208401356111d981611194565b929592945050506040919091013590565b600080604083850312156111fd57600080fd5b823561120881611194565b9150602083013561121881611194565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561126157611261611223565b604052919050565b60006001600160401b0382111561128257611282611223565b5060051b60200190565b6000806000606084860312156112a157600080fd5b83356112ac81611194565b92506020848101356001600160401b038111156112c857600080fd5b8501601f810187136112d957600080fd5b80356112ec6112e782611269565b611239565b81815260059190911b8201830190838101908983111561130b57600080fd5b928401925b8284101561132957833582529284019290840190611310565b96999698505050506040949094013593505050565b60006020828403121561135057600080fd5b813561135b81611194565b9392505050565b6001600160a01b0391909116815260200190565b6000602080838503121561138957600080fd5b82356001600160401b0381111561139f57600080fd5b8301601f810185136113b057600080fd5b80356113be6112e782611269565b81815260059190911b820183019083810190878311156113dd57600080fd5b928401925b828410156110eb5783356113f581611194565b825292840192908401906113e2565b60006020828403121561141657600080fd5b5035919050565b60006020828403121561142f57600080fd5b815161135b81611194565b6001600160a01b0392831681529116602082015260400190565b60208082526017908201527629ba30b5b2a6b0b730b3b2b91d102727aa2fa7aba722a960491b604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016114e7576114e76114bf565b5060010190565b604080825283519082018190526000906020906060840190828701845b828110156115275781518452928401929084019060010161150b565b50505092019290925292915050565b80820180821115611549576115496114bf565b92915050565b60006020828403121561156157600080fd5b8151801515811461135b57600080fd5b60005b8381101561158c578181015183820152602001611574565b50506000910152565b600082516115a7818460208701611571565b9190910192915050565b60208152600082518060208401526115d0816040850160208701611571565b601f01601f1916919091016040019291505056fea26469706673582212202db93815f293da01e0735909b25357abceeee6037469511b1f2fb1de543b038664736f6c63430008120033";

type StakeManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakeManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakeManager__factory extends ContractFactory {
  constructor(...args: StakeManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factoryAddress: AddressLike,
    _minDelayBeforeStop: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _factoryAddress,
      _minDelayBeforeStop,
      overrides || {}
    );
  }
  override deploy(
    _factoryAddress: AddressLike,
    _minDelayBeforeStop: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _factoryAddress,
      _minDelayBeforeStop,
      overrides || {}
    ) as Promise<
      StakeManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StakeManager__factory {
    return super.connect(runner) as StakeManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakeManagerInterface {
    return new Interface(_abi) as StakeManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StakeManager {
    return new Contract(address, _abi, runner) as unknown as StakeManager;
  }
}
