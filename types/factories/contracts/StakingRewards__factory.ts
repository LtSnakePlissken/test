/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../common";
import type {
  StakingRewards,
  StakingRewardsInterface,
} from "../../contracts/StakingRewards";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingTokenAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_rewardTokenAddresses",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_rewardsDuration",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_depositFeeBps",
        type: "uint16",
      },
      {
        internalType: "uint16[]",
        name: "_withdrawalFeesBps",
        type: "uint16[]",
      },
      {
        internalType: "uint32[]",
        name: "_withdrawalFeeSchedule",
        type: "uint32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "DepositFeesCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "FeesRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "_depositFeeBps",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16[]",
        name: "_withdrawalFeesBps",
        type: "uint16[]",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "_feeSchedule",
        type: "uint32[]",
      },
    ],
    name: "FeesSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "LeftoverRewardRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "RewardsEmissionEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_rewards",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "RewardsEmissionStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "WithdrawalFeesCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "addRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_depositAmount",
        type: "uint256",
      },
    ],
    name: "depositFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositFeeBps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feesUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "getRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "recoverFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "recoverLeftoverReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "emissionRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "rewardRates",
    outputs: [
      {
        internalType: "uint256",
        name: "emissionRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "rewardTokenAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "isRewardToken",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "rewardTokenIndex",
    outputs: [
      {
        internalType: "int8",
        name: "",
        type: "int8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "walletAddress",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_rewards",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "startEmission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_refundAddress",
        type: "address",
      },
    ],
    name: "stopEmission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userLastStakedTime",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "walletAddress",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_withdrawalAmount",
        type: "uint256",
      },
    ],
    name: "withdrawalFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdrawalFeeSchedule",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdrawalFeesBps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002fed38038062002fed833981016040819052620000349162000741565b600160005585838383836200004933620001c0565b6001600160a01b0381166200007b5760405162461bcd60e51b8152600401620000729062000869565b60405180910390fd5b6001600160a01b03811660808190526040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015620000c6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ec919062000885565b620000f990600a620009c6565b6200010d90670de0b6b3a7640000620009d7565b600455506200011e83838362000212565b5050505060008551116200015a5760405162461bcd60e51b8152602060048201526002602482015261453960f01b604482015260640162000072565b60005b8551811015620001ad5760008682815181106200017e576200017e620009fa565b6020026020010151905062000199816200041160201b60201c565b50620001a58162000a10565b90506200015d565b505050600d919091555062000ada915050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b81518151148015620002265750600a815111155b80156200023957506107d08361ffff1611155b6200026c5760405162461bcd60e51b8152602060048201526002602482015261453560f01b604482015260640162000072565b6000806200027e6107d0600162000a2c565b905060005b835181101562000397578263ffffffff16848281518110620002a957620002a9620009fa565b602002602001015163ffffffff1611620002eb5760405162461bcd60e51b8152602060048201526002602482015261453760f01b604482015260640162000072565b81858281518110620003015762000301620009fa565b602002602001015161ffff1610620003415760405162461bcd60e51b815260206004820152600260248201526108a760f31b604482015260640162000072565b838181518110620003565762000356620009fa565b60200260200101519250848181518110620003755762000375620009fa565b602002602001015161ffff169150806200038f9062000a10565b905062000283565b508251620003ad906005906020860190620004fd565b508351620003c390600690602087019062000555565b5061ffff85166007556040517fab4c36b25b04e6f8ac9915203aba1048c17841782324a583e98128b8c1c964f390620004029087908790879062000a42565b60405180910390a15050505050565b600a54600f10156200044c5760405162461bcd60e51b815260206004820152600360248201526245313560e81b604482015260640162000072565b6001600160a01b038116620004755760405162461bcd60e51b8152600401620000729062000869565b6001600160a01b0381166000908152600b602052604090205460ff16620004fa57600a805460018082019092557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0319166001600160a01b0384169081179091556000908152600b60205260409020805460ff191690911790555b50565b82805482825590600052602060002090810192821562000543579160200282015b8281111562000543578251829063ffffffff169055916020019190600101906200051e565b506200055192915062000599565b5090565b82805482825590600052602060002090810192821562000543579160200282015b8281111562000543578251829061ffff1690559160200191906001019062000576565b5b808211156200055157600081556001016200059a565b80516001600160a01b0381168114620005c857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156200060e576200060e620005cd565b604052919050565b60006001600160401b03821115620006325762000632620005cd565b5060051b60200190565b805161ffff81168114620005c857600080fd5b600082601f8301126200066157600080fd5b815160206200067a620006748362000616565b620005e3565b82815260059290921b840181019181810190868411156200069a57600080fd5b8286015b84811015620006c057620006b2816200063c565b83529183019183016200069e565b509695505050505050565b600082601f830112620006dd57600080fd5b81516020620006f0620006748362000616565b82815260059290921b840181019181810190868411156200071057600080fd5b8286015b84811015620006c057805163ffffffff81168114620007335760008081fd5b835291830191830162000714565b60008060008060008060c087890312156200075b57600080fd5b6200076687620005b0565b602088810151919750906001600160401b03808211156200078657600080fd5b818a0191508a601f8301126200079b57600080fd5b8151620007ac620006748262000616565b81815260059190911b8301840190848101908d831115620007cc57600080fd5b938501935b82851015620007f557620007e585620005b0565b82529385019390850190620007d1565b809a5050505060408a015196506200081060608b016200063c565b955060808a01519250808311156200082757600080fd5b620008358b848c016200064f565b945060a08a01519250808311156200084c57600080fd5b50506200085c89828a01620006cb565b9150509295509295509295565b602080825260029082015261453160f01b604082015260600190565b6000602082840312156200089857600080fd5b815160ff81168114620008aa57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000908578160001904821115620008ec57620008ec620008b1565b80851615620008fa57918102915b93841c9390800290620008cc565b509250929050565b6000826200092157506001620009c0565b816200093057506000620009c0565b8160018114620009495760028114620009545762000974565b6001915050620009c0565b60ff841115620009685762000968620008b1565b50506001821b620009c0565b5060208310610133831016604e8410600b841016171562000999575081810a620009c0565b620009a58383620008c7565b8060001904821115620009bc57620009bc620008b1565b0290505b92915050565b6000620008aa60ff84168362000910565b600082620009f557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b60006001820162000a255762000a25620008b1565b5060010190565b80820180821115620009c057620009c0620008b1565b60006060820161ffff80871684526020606081860152828751808552608087019150828901945060005b8181101562000a8c57855185168352948301949183019160010162000a6c565b5050858103604087015286518082529082019350915080860160005b8381101562000acc57815163ffffffff168552938201939082019060010162000aa8565b509298975050505050505050565b6080516124d462000b196000396000818161037e015281816105350152818161081b01528181610b5f015281816112b101526113ad01526124d46000f3fe608060405234801561001057600080fd5b50600436106101cd5760003560e01c806301f59d16146101d25780631171bda9146101ee57806318160ddd146102035780631c03e6cc1461020c5780631db7efd81461021f578063211dc32d1461025257806327e235e3146102655780632e1a7d4d146102855780632e9f060214610298578063386a9525146102ab5780633d3b2603146102b4578063415be3b5146102d4578063423c485a146102fa57806354feec3e1461030d5780636b091695146103205780636da9c58e146103335780637035ab9814610346578063715018a61461037157806372f702f31461037957806379ee54f7146103ad5780637aaeaf7f146103c05780637bb7bed1146103d35780637beb3d9f146103e657806380faa57d146103ef57806387e7ed3a146103f75780638da5cb5b1461040a5780639003adfe146104125780639ce43f901461041b5780639e3582c81461043b578063a694fc3a1461044e578063a7309d7d14610461578063ab8798271461049c578063c8f33c91146104a5578063e70b9e27146104ae578063e9fad8ee146104d9578063ebe2b12b146104e1578063f1229777146104ea578063f2d17639146104fd578063f2fde38b14610510575b600080fd5b6101db6107d081565b6040519081526020015b60405180910390f35b6102016101fc366004611fd7565b610523565b005b6101db60025481565b61020161021a366004612013565b61061b565b61024261022d366004612013565b600b6020526000908152604090205460ff1681565b60405190151581526020016101e5565b6101db61026036600461202e565b610650565b6101db610273366004612013565b60036020526000908152604090205481565b610201610293366004612061565b61075b565b6102016102a6366004612090565b610883565b6101db600d5481565b6101db6102c2366004612013565b600f6020526000908152604090205481565b6102e76102e2366004612013565b610ca3565b60405160009190910b81526020016101e5565b6101db610308366004612061565b610d29565b6101db61031b366004612061565b610d56565b61020161032e36600461202e565b610d77565b610201610341366004612013565b610eb8565b6101db61035436600461202e565b601160209081526000928352604080842090915290825290205481565b610201610fc7565b6103a07f000000000000000000000000000000000000000000000000000000000000000081565b6040516101e59190612153565b6102016103bb366004612013565b610fdb565b6101db6103ce366004612167565b611161565b6103a06103e1366004612061565b611217565b6101db61271081565b6101db611241565b610201610405366004612013565b611258565b6103a06112e3565b6101db60085481565b6101db610429366004612013565b60106020526000908152604090205481565b6101db610449366004612061565b6112f2565b61020161045c366004612061565b611302565b61048761046f366004612013565b60096020526000908152604090205463ffffffff1681565b60405163ffffffff90911681526020016101e5565b6101db60075481565b6101db600e5481565b6101db6104bc36600461202e565b601260209081526000928352604080842090915290825290205481565b610201611407565b6101db600c5481565b6101db6104f8366004612013565b611429565b61020161050b36600461202e565b611530565b61020161051e366004612013565b611687565b61052b6116fd565b610533611756565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03160361059e5760405162461bcd60e51b8152602060048201526002602482015261114d60f21b60448201526064015b60405180910390fd5b6105a98383836117b5565b826105be6001600160a01b0382168484611804565b826001600160a01b0316846001600160a01b03167ffff3b3844276f57024e0b42afec1a37f75db36511e43819a4f2a63ab7862b6488460405161060391815260200190565b60405180910390a3506106166001600055565b505050565b610623611756565b600c5442116106445760405162461bcd60e51b815260040161059590612191565b61064d81611867565b50565b6001600160a01b038083166000818152601260209081526040808320948616835293815283822054845163313ce56760e01b81529451929490939263313ce567926004808401939192918290030181865afa1580156106b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d791906121ae565b6106e290600a6122d2565b6001600160a01b0380861660009081526011602090815260408083209388168352929052205461071186611429565b61071b91906122e1565b6001600160a01b03851660009081526003602052604090205461073e91906122f4565b610748919061230b565b610752919061232d565b90505b92915050565b6107636116fd565b8061076e3382611962565b915060008211801561078f5750336000908152600360205260409020548211155b80156107aa5750336000908152600360205260409020548111155b6107c65760405162461bcd60e51b815260040161059590612340565b6004546107d390826122f4565b600260008282546107e491906122e1565b909155505033600090815260036020526040812080548392906108089084906122e1565b9091555061084290506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163384611804565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a25061064d6001600055565b61088b6116fd565b610893611756565b600c5442116108b45760405162461bcd60e51b815260040161059590612191565b6000805b600a54811015610921576000600a82815481106108d7576108d761235c565b6000918252602090912001546001600160a01b031690506108f781611429565b6001600160a01b0390911660009081526010602052604090205561091a81612372565b90506108b8565b5061092a611241565b600e556001600160a01b038116156109d85760005b600a548110156109d6576000600a828154811061095e5761095e61235c565b6000918252602090912001546001600160a01b0316905061097f8184610650565b6001600160a01b039182166000818152601260209081526040808320958816808452958252808320949094559181526010825282812054601183528382209482529390915220556109cf81612372565b905061093f565b505b60008211610a0e5760405162461bcd60e51b815260206004820152600360248201526204531360ec1b6044820152606401610595565b600a54835114610a465760405162461bcd60e51b815260206004820152600360248201526245313160e81b6044820152606401610595565b600d82905560005b600a54811015610c44576000600a8281548110610a6d57610a6d61235c565b600091825260209091200154600d5486516001600160a01b0390921692508291879085908110610a9f57610a9f61235c565b6020026020010151610ab1919061230b565b6001600160a01b0382166000908152600f6020526040812091909155600a805485908110610ae157610ae161235c565b6000918252602090912001546040516370a0823160e01b81526001600160a01b03909116906370a0823190610b1a903090600401612153565b602060405180830381865afa158015610b37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5b919061238b565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614610bdf57600d54610ba3908261230b565b6001600160a01b0383166000908152600f60205260409020541115610bda5760405162461bcd60e51b815260040161059590612340565b610c30565b600d54600254610bef90836122e1565b610bf9919061230b565b6001600160a01b0383166000908152600f60205260409020541115610c305760405162461bcd60e51b815260040161059590612340565b50505080610c3d90612372565b9050610a4e565b5042600e819055600d54610c579161232d565b600c556040517faab1f55dce0d0e628e283ce1061d0afccffcf61f9c14391c899b5952492ce82190610c8c90859085906123a4565b60405180910390a150610c9f6001600055565b5050565b6001600160a01b0381166000908152600b602052604081205460ff1615610d205760005b600a54811015610d1e57826001600160a01b0316600a8281548110610cee57610cee61235c565b6000918252602090912001546001600160a01b031603610d0e5792915050565b610d1781612372565b9050610cc7565b505b50600019919050565b60008060075411610d3b576000610755565b61271060075483610d4c91906122f4565b610755919061230b565b60058181548110610d6657600080fd5b600091825260209091200154905081565b610d7f6116fd565b8060005b600a54811015610dec576000600a8281548110610da257610da261235c565b6000918252602090912001546001600160a01b03169050610dc281611429565b6001600160a01b03909116600090815260106020526040902055610de581612372565b9050610d83565b50610df5611241565b600e556001600160a01b03811615610ea35760005b600a54811015610ea1576000600a8281548110610e2957610e2961235c565b6000918252602090912001546001600160a01b03169050610e4a8184610650565b6001600160a01b03918216600081815260126020908152604080832095881680845295825280832094909455918152601082528281205460118352838220948252939091522055610e9a81612372565b9050610e0a565b505b610ead83836119e9565b50610c9f6001600055565b610ec06116fd565b610ec8611756565b600c54421115610eea5760405162461bcd60e51b8152600401610595906123ec565b600042600c541115610f075742600c54610f0491906122e1565b90505b42600c5560005b600a54811015610f92576000600a8281548110610f2d57610f2d61235c565b60009182526020808320909101546001600160a01b0316808352600f9091526040822054909250829190610f629086906122f4565b90508015610f7e57610f7e6001600160a01b0384168783611804565b50505080610f8b90612372565b9050610f0e565b506040517f9bad5e1e43bc35e89725967a54f4bc384078248a1ea5c315be3b260a68cbb17a90600090a15061064d6001600055565b610fcf611756565b610fd96000611b4c565b565b610fe36116fd565b8060005b600a54811015611050576000600a82815481106110065761100661235c565b6000918252602090912001546001600160a01b0316905061102681611429565b6001600160a01b0390911660009081526010602052604090205561104981612372565b9050610fe7565b50611059611241565b600e556001600160a01b038116156111075760005b600a54811015611105576000600a828154811061108d5761108d61235c565b6000918252602090912001546001600160a01b031690506110ae8184610650565b6001600160a01b039182166000818152601260209081526040808320958816808452958252808320949094559181526010825282812054601183528382209482529390915220556110fe81612372565b905061106e565b505b60005b600a5481101561115557611145600a828154811061112a5761112a61235c565b6000918252602090912001546001600160a01b0316846119e9565b61114e81612372565b905061110a565b505061064d6001600055565b6001600160a01b038216600090815260096020526040812054819061118c9063ffffffff16426122e1565b90506000805b60055481101561120e57600581815481106111af576111af61235c565b90600052602060002001548310156111fe57612710600682815481106111d7576111d761235c565b9060005260206000200154866111ed91906122f4565b6111f7919061230b565b915061120e565b61120781612372565b9050611192565b50949350505050565b600a818154811061122757600080fd5b6000918252602090912001546001600160a01b0316905081565b6000600c5442106112535750600c5490565b504290565b611260611756565b6112686116fd565b6008805460009091556040518181527f6857c770f3cb43e9c19050a37dd914ec876241c1f4b487d26a1d4f5d3054f49b9060200160405180910390a16112d86001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168383611804565b5061064d6001600055565b6001546001600160a01b031690565b60068181548110610d6657600080fd5b61130a6116fd565b806113153382611b9e565b91506000821180156113275750600081115b6113585760405162461bcd60e51b8152602060048201526002602482015261229960f11b6044820152606401610595565b60045461136590836122f4565b60026000828254611376919061232d565b9091555050336000908152600360205260408120805484929061139a90849061232d565b909155506113d590506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611cf0565b60405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001610870565b61141033611d2e565b33600090815260036020526040902054610fd99061075b565b600060025460000361145157506001600160a01b031660009081526010602052604090205490565b600254826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611492573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b691906121ae565b6114c190600a6122d2565b6001600160a01b0384166000908152600f6020526040902054600e546114e5611241565b6114ef91906122e1565b6114f991906122f4565b61150391906122f4565b61150d919061230b565b6001600160a01b038316600090815260106020526040902054610755919061232d565b611538611756565b600c5442116115595760405162461bcd60e51b815260040161059590612191565b6002541561158f5760405162461bcd60e51b815260206004820152600360248201526222989960e91b6044820152606401610595565b6001600160a01b0382166000908152600b602052604090205460ff1615610c9f576040516370a0823160e01b815282906000906001600160a01b038316906370a08231906115e1903090600401612153565b602060405180830381865afa1580156115fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611622919061238b565b9050801561163e5761163e6001600160a01b0383168483611804565b826001600160a01b03167fcaa95c7b01f93ffe197f5e7316a1a2f387c5bfff8cb445095f2110ff5c1b29958260405161167991815260200190565b60405180910390a250505050565b61168f611756565b6001600160a01b0381166116f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610595565b61064d81611b4c565b60026000540361174f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610595565b6002600055565b3361175f6112e3565b6001600160a01b031614610fd95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610595565b6001600160a01b0383166000908152600b602052604090205460ff16156106165760405162461bcd60e51b815260206004820152600360248201526222989b60e91b6044820152606401610595565b6040516001600160a01b03831660248201526044810182905261061690849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611d37565b600a54600f10156118a05760405162461bcd60e51b815260206004820152600360248201526245313560e81b6044820152606401610595565b6001600160a01b0381166118db5760405162461bcd60e51b8152602060048201526002602482015261453160f01b6044820152606401610595565b6001600160a01b0381166000908152600b602052604090205460ff1661064d57600a805460018181019092557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0384166001600160a01b031990911681179091556000908152600b60205260409020805460ff1916909117905550565b60008061196f8484611161565b905080156119ce578060086000828254611989919061232d565b90915550506040518181526001600160a01b038516907fd0b34aaed5c558a8df736a5aaf9a49b539c4e86fb3ee5a1ac76e0bec23cbdd03906020015b60405180910390a25b6119e1846119dc83866122e1565b919050565b949350505050565b6119f16112e3565b6001600160a01b0316336001600160a01b03161480611a185750336001600160a01b038216145b611a4a5760405162461bcd60e51b8152602060048201526003602482015262114c4d60ea1b6044820152606401610595565b6001600160a01b0382166000908152600b602052604090205460ff16611a985760405162461bcd60e51b815260206004820152600360248201526245313360e81b6044820152606401610595565b6001600160a01b038083166000908152601260209081526040808320938516835292905220548015610616576001600160a01b038084166000818152601260209081526040808320948716835293905291822091909155611afa908383611804565b816001600160a01b0316836001600160a01b03167f540798df468d7b23d11f156fdb954cb19ad414d150722a7b6d55ba369dea792e83604051611b3f91815260200190565b60405180910390a3505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000600c54421115611bc25760405162461bcd60e51b8152600401610595906123ec565b8260005b600a54811015611c2f576000600a8281548110611be557611be561235c565b6000918252602090912001546001600160a01b03169050611c0581611429565b6001600160a01b03909116600090815260106020526040902055611c2881612372565b9050611bc6565b50611c38611241565b600e556001600160a01b03811615611ce65760005b600a54811015611ce4576000600a8281548110611c6c57611c6c61235c565b6000918252602090912001546001600160a01b03169050611c8d8184610650565b6001600160a01b03918216600081815260126020908152604080832095881680845295825280832094909455918152601082528281205460118352838220948252939091522055611cdd81612372565b9050611c4d565b505b6119e18484611e0c565b6040516001600160a01b0380851660248301528316604482015260648101829052611d289085906323b872dd60e01b90608401611830565b50505050565b61064d81610fdb565b6000611d8c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611e9d9092919063ffffffff16565b9050805160001480611dad575080806020019051810190611dad9190612409565b6106165760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610595565b600080611e1883610d29565b6001600160a01b0385166000908152600960205260409020805463ffffffff19164263ffffffff16179055905080156119ce578060086000828254611e5d919061232d565b90915550506040518181526001600160a01b038516907f34f2a7363b1ef64b0b62a223c88cf3f54a68686acfcb9531d7deb46004f37c46906020016119c5565b60606119e1848460008585600080866001600160a01b03168587604051611ec4919061244f565b60006040518083038185875af1925050503d8060008114611f01576040519150601f19603f3d011682016040523d82523d6000602084013e611f06565b606091505b5091509150611f1787838387611f22565b979650505050505050565b60608315611f91578251600003611f8a576001600160a01b0385163b611f8a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610595565b50816119e1565b6119e18383815115611fa65781518083602001fd5b8060405162461bcd60e51b8152600401610595919061246b565b80356001600160a01b03811681146119dc57600080fd5b600080600060608486031215611fec57600080fd5b611ff584611fc0565b925061200360208501611fc0565b9150604084013590509250925092565b60006020828403121561202557600080fd5b61075282611fc0565b6000806040838503121561204157600080fd5b61204a83611fc0565b915061205860208401611fc0565b90509250929050565b60006020828403121561207357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156120a357600080fd5b82356001600160401b03808211156120ba57600080fd5b818501915085601f8301126120ce57600080fd5b81356020828211156120e2576120e261207a565b8160051b604051601f19603f830116810181811086821117156121075761210761207a565b60405292835281830193508481018201928984111561212557600080fd5b948201945b838610156121435785358552948201949382019361212a565b9997909101359750505050505050565b6001600160a01b0391909116815260200190565b6000806040838503121561217a57600080fd5b61218383611fc0565b946020939093013593505050565b60208082526003908201526245313760e81b604082015260600190565b6000602082840312156121c057600080fd5b815160ff811681146121d157600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561222957816000190482111561220f5761220f6121d8565b8085161561221c57918102915b93841c93908002906121f3565b509250929050565b60008261224057506001610755565b8161224d57506000610755565b8160018114612263576002811461226d57612289565b6001915050610755565b60ff84111561227e5761227e6121d8565b50506001821b610755565b5060208310610133831016604e8410600b84101617156122ac575081810a610755565b6122b683836121ee565b80600019048211156122ca576122ca6121d8565b029392505050565b600061075260ff841683612231565b81810381811115610755576107556121d8565b8082028115828204841417610755576107556121d8565b60008261232857634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610755576107556121d8565b602080825260029082015261453360f01b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201612384576123846121d8565b5060010190565b60006020828403121561239d57600080fd5b5051919050565b604080825283519082018190526000906020906060840190828701845b828110156123dd578151845292840192908401906001016123c1565b50505092019290925292915050565b60208082526003908201526208a62760eb1b604082015260600190565b60006020828403121561241b57600080fd5b815180151581146121d157600080fd5b60005b8381101561244657818101518382015260200161242e565b50506000910152565b6000825161246181846020870161242b565b9190910192915050565b602081526000825180602084015261248a81604085016020870161242b565b601f01601f1916919091016040019291505056fea26469706673582212202401445058b5538f807f76c0010e82efae903d9ed24be19ebb40edfa0e8a35bd64736f6c63430008120033";

type StakingRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingRewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingRewards__factory extends ContractFactory {
  constructor(...args: StakingRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _stakingTokenAddress: AddressLike,
    _rewardTokenAddresses: AddressLike[],
    _rewardsDuration: BigNumberish,
    _depositFeeBps: BigNumberish,
    _withdrawalFeesBps: BigNumberish[],
    _withdrawalFeeSchedule: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _stakingTokenAddress,
      _rewardTokenAddresses,
      _rewardsDuration,
      _depositFeeBps,
      _withdrawalFeesBps,
      _withdrawalFeeSchedule,
      overrides || {}
    );
  }
  override deploy(
    _stakingTokenAddress: AddressLike,
    _rewardTokenAddresses: AddressLike[],
    _rewardsDuration: BigNumberish,
    _depositFeeBps: BigNumberish,
    _withdrawalFeesBps: BigNumberish[],
    _withdrawalFeeSchedule: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _stakingTokenAddress,
      _rewardTokenAddresses,
      _rewardsDuration,
      _depositFeeBps,
      _withdrawalFeesBps,
      _withdrawalFeeSchedule,
      overrides || {}
    ) as Promise<
      StakingRewards & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StakingRewards__factory {
    return super.connect(runner) as StakingRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingRewardsInterface {
    return new Interface(_abi) as StakingRewardsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StakingRewards {
    return new Contract(address, _abi, runner) as unknown as StakingRewards;
  }
}
