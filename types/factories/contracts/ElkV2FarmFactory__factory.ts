/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../common";
import type {
  ElkV2FarmFactory,
  ElkV2FarmFactoryInterface,
} from "../../contracts/ElkV2FarmFactory";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_oracleAddresses",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_feeToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newContract",
        type: "address",
      },
    ],
    name: "ContractCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "FeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_balanceRecovered",
        type: "uint256",
      },
    ],
    name: "FeesRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_farmManager",
        type: "address",
      },
    ],
    name: "ManagerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allFarms",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allFarmsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracleAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lpTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_coverageTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_coverageAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_coverageVestingDuration",
        type: "uint32",
      },
      {
        internalType: "address[]",
        name: "_rewardTokenAddresses",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_rewardsDuration",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_depositFeeBps",
        type: "uint16",
      },
      {
        internalType: "uint16[]",
        name: "_withdrawalFeesBps",
        type: "uint16[]",
      },
      {
        internalType: "uint32[]",
        name: "_withdrawalFeeSchedule",
        type: "uint32[]",
      },
    ],
    name: "createNewPermissonedRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracleAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lpTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_coverageTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_coverageAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_coverageVestingDuration",
        type: "uint32",
      },
      {
        internalType: "address[]",
        name: "_rewardTokenAddresses",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_rewardsDuration",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_depositFeeBps",
        type: "uint16",
      },
      {
        internalType: "uint16[]",
        name: "_withdrawalFeesBps",
        type: "uint16[]",
      },
      {
        internalType: "uint32[]",
        name: "_withdrawalFeeSchedule",
        type: "uint32[]",
      },
    ],
    name: "createNewRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "farmManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getFarm",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getPermissionedFarm",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isFarm",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isPermissionedFarm",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_farmAddress",
        type: "address",
      },
    ],
    name: "overrideOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_managerAddress",
        type: "address",
      },
    ],
    name: "setManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_farmAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferFarmOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedOracles",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052683635c9adc5dea0000060095569152d02c7e14af6800000600a553480156200002c57600080fd5b5060405162001c1738038062001c178339810160408190526200004f91620001d6565b6200005a3362000153565b600880546001600160a01b0319166001600160a01b03831617905560005b82518110156200014a5760006001600160a01b0316838281518110620000a257620000a2620002bc565b60200260200101516001600160a01b031603620000ea5760405162461bcd60e51b81526020600482015260026024820152614e4f60f01b604482015260640160405180910390fd5b6001600b6000858481518110620001055762000105620002bc565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556200014281620002d2565b905062000078565b505050620002fa565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620001d157600080fd5b919050565b60008060408385031215620001ea57600080fd5b82516001600160401b03808211156200020257600080fd5b818501915085601f8301126200021757600080fd5b81516020828211156200022e576200022e620001a3565b8160051b604051601f19603f83011681018181108682111715620002565762000256620001a3565b6040529283528183019350848101820192898411156200027557600080fd5b948201945b838610156200029e576200028e86620001b9565b855294820194938201936200027a565b9650620002af9050878201620001b9565b9450505050509250929050565b634e487b7160e01b600052603260045260246000fd5b600060018201620002f357634e487b7160e01b600052601160045260246000fd5b5060010190565b61190d806200030a6000396000f3fe608060405234801561001057600080fd5b50600436106101125760003560e01c806301f59d161461011757806320925787146101335780633ae21bb11461014857806343acb9a91461015b57806343da3ff61461017b578063476343ee146101ae5780634b2d07cf146101b6578063637012c7146101c9578063647846a5146101ec57806369fe0e2d146101ff5780636e5a296a14610212578063715018a6146102465780637bc6d4431461024e5780637fdf1b04146102565780638da5cb5b14610269578063a021030914610271578063a1d953f71461029a578063ba7174df146102ce578063d0ebdbe7146102f1578063ddca3f4314610304578063e9290a6c1461030d578063f2fde38b14610320575b600080fd5b610120600a5481565b6040519081526020015b60405180910390f35b6101466101413660046112f2565b610333565b005b61014661015636600461132b565b610395565b61016e61016936600461134f565b6103aa565b60405161012a9190611368565b61019e61018936600461132b565b600b6020526000908152604090205460ff1681565b604051901515815260200161012a565b6101466103d4565b60065461016e906001600160a01b031681565b61019e6101d736600461132b565b60036020526000908152604090205460ff1681565b60085461016e906001600160a01b031681565b61014661020d36600461134f565b61049f565b61016e6102203660046112f2565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b610146610512565b600554610120565b610146610264366004611543565b610526565b61016e610821565b61016e61027f36600461132b565b6007602052600090815260409020546001600160a01b031681565b61016e6102a83660046112f2565b60016020908152600092835260408084209091529082529020546001600160a01b031681565b61019e6102dc36600461132b565b60046020526000908152604090205460ff1681565b6101466102ff36600461132b565b610830565b61012060095481565b61014661031b366004611543565b6108be565b61014661032e36600461132b565b610ba2565b6001600160a01b038281166000908152600760205260409020541633146103875760405162461bcd60e51b81526020600482015260036024820152624e463160e81b60448201526064015b60405180910390fd5b6103918282610c18565b5050565b61039d610e4d565b6103a78133610c18565b50565b600581815481106103ba57600080fd5b6000918252602090912001546001600160a01b0316905081565b6103dc610e4d565b6008546040516370a0823160e01b81526000916001600160a01b0316906370a082319061040d903090600401611368565b602060405180830381865afa15801561042a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044e9190611633565b600854909150610468906001600160a01b03163383610eac565b6040518181527f6857c770f3cb43e9c19050a37dd914ec876241c1f4b487d26a1d4f5d3054f49b906020015b60405180910390a150565b6104a7610e4d565b600a5481106104dd5760405162461bcd60e51b815260206004820152600260248201526124a360f11b604482015260640161037e565b60098190556040518181527f20461e09b8e557b77e107939f9ce6544698123aad0fc964ac5cc59b7df2e608f90602001610494565b61051a610e4d565b6105246000610f14565b565b6001600160a01b038a166000908152600b602052604090205460ff1661055e5760405162461bcd60e51b815260040161037e9061164c565b3360009081526001602090815260408083206001600160a01b038d8116855292529091205416156105b65760405162461bcd60e51b8152602060048201526002602482015261464560f01b604482015260640161037e565b60008a8a8a8a8a8a8a8a8a8a6040516020016105db9a999897969594939291906116dd565b604051602081830303815290604052905060008a336040516020016106019291906117a4565b604051602081830303815290604052805190602001209050610621610f64565b60065460405163c82e8b9560e01b815260009173__$7dc177069a0b4ab33f32b489c699f21ff2$__9163c82e8b959161066c91879187916001600160a01b0390911690600401611816565b602060405180830381865af4158015610689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ad9190611849565b9050600160036000836001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055508060016000336001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055503360076000836001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506005819080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055506000805160206118b88339815191528160405161080a9190611368565b60405180910390a150505050505050505050505050565b6000546001600160a01b031690565b610838610e4d565b6001600160a01b0381166108735760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b604482015260640161037e565b600680546001600160a01b0319166001600160a01b0383161790556040517f60a0f5b9f9e81e98216071b85826681c796256fe3d1354ecb675580fba64fa6990610494908390611368565b6001600160a01b038a166000908152600b602052604090205460ff166108f65760405162461bcd60e51b815260040161037e9061164c565b3360009081526002602090815260408083206001600160a01b038d81168552925290912054161561094e5760405162461bcd60e51b8152602060048201526002602482015261504560f01b604482015260640161037e565b60008a8a8a8a8a8a8a8a8a8a6040516020016109739a999897969594939291906116dd565b604051602081830303815290604052905060008a336040516020016109999291906117a4565b6040516020818303038152906040528051906020012090506109b9610f64565b60065460405163c82e8b9560e01b815260009173__$55b9252869ae896c9530f1d5eaf00930c4$__9163c82e8b9591610a0491879187916001600160a01b0390911690600401611816565b602060405180830381865af4158015610a21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a459190611849565b9050600160046000836001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055508060026000336001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055503360076000836001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506005819080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055506000805160206118b88339815191528160405161080a9190611368565b610baa610e4d565b6001600160a01b038116610c0f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161037e565b6103a781610f14565b6001600160a01b03821660009081526003602052604090205460ff1680610c5757506001600160a01b03821660009081526004602052604090205460ff165b610c895760405162461bcd60e51b815260206004820152600360248201526227231960e91b604482015260640161037e565b6001600160a01b038083166000908152600760205260409020541680610cd75760405162461bcd60e51b81526020600482015260036024820152624e463360e81b604482015260640161037e565b60008390506000816001600160a01b03166372f702f36040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610d1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d429190611849565b6001600160a01b03861660009081526003602052604090205490915060ff1615610dd8576001600160a01b03808416600090815260016020818152604080842086861680865290835281852080546001600160a01b03199081169091558a87168087529484528286209186529083528185208054968c169682168717905594845260079091529091208054909216179055610e46565b6001600160a01b03808416600090815260026020818152604080842086861680865290835281852080546001600160a01b03199081169091558a87168087529484528286209186529083528185208054968c1696821687179055948452600790915290912080549092161790555b5050505050565b33610e56610821565b6001600160a01b0316146105245760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161037e565b6040516001600160a01b038316602482015260448101829052610f0f90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261102a565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6009546008546040516370a0823160e01b81526001600160a01b03909116906370a0823190610f97903390600401611368565b602060405180830381865afa158015610fb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd89190611633565b101561100b5760405162461bcd60e51b8152602060048201526002602482015261272160f11b604482015260640161037e565b600954600854610524916001600160a01b0390911690339030906110ff565b600061107f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661113d9092919063ffffffff16565b90508051600014806110a05750808060200190518101906110a09190611866565b610f0f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161037e565b6040516001600160a01b03808516602483015283166044820152606481018290526111379085906323b872dd60e01b90608401610ed8565b50505050565b606061114c8484600085611154565b949350505050565b6060824710156111b55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161037e565b600080866001600160a01b031685876040516111d19190611888565b60006040518083038185875af1925050503d806000811461120e576040519150601f19603f3d011682016040523d82523d6000602084013e611213565b606091505b50915091506112248783838761122f565b979650505050505050565b6060831561129e578251600003611297576001600160a01b0385163b6112975760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161037e565b508161114c565b61114c83838151156112b35781518083602001fd5b8060405162461bcd60e51b815260040161037e91906118a4565b6001600160a01b03811681146103a757600080fd5b80356112ed816112cd565b919050565b6000806040838503121561130557600080fd5b8235611310816112cd565b91506020830135611320816112cd565b809150509250929050565b60006020828403121561133d57600080fd5b8135611348816112cd565b9392505050565b60006020828403121561136157600080fd5b5035919050565b6001600160a01b0391909116815260200190565b803563ffffffff811681146112ed57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156113ce576113ce611390565b604052919050565b60006001600160401b038211156113ef576113ef611390565b5060051b60200190565b600082601f83011261140a57600080fd5b8135602061141f61141a836113d6565b6113a6565b82815260059290921b8401810191818101908684111561143e57600080fd5b8286015b84811015611462578035611455816112cd565b8352918301918301611442565b509695505050505050565b803561ffff811681146112ed57600080fd5b600082601f83011261149057600080fd5b813560206114a061141a836113d6565b82815260059290921b840181019181810190868411156114bf57600080fd5b8286015b84811015611462576114d48161146d565b83529183019183016114c3565b600082601f8301126114f257600080fd5b8135602061150261141a836113d6565b82815260059290921b8401810191818101908684111561152157600080fd5b8286015b84811015611462576115368161137c565b8352918301918301611525565b6000806000806000806000806000806101408b8d03121561156357600080fd5b61156c8b6112e2565b995061157a60208c016112e2565b985061158860408c016112e2565b975060608b0135965061159d60808c0161137c565b955060a08b01356001600160401b03808211156115b957600080fd5b6115c58e838f016113f9565b965060c08d013595506115da60e08e0161146d565b94506101008d01359150808211156115f157600080fd5b6115fd8e838f0161147f565b93506101208d013591508082111561161457600080fd5b506116218d828e016114e1565b9150509295989b9194979a5092959850565b60006020828403121561164557600080fd5b5051919050565b6020808252600290820152614e5760f01b604082015260600190565b600081518084526020808501945080840160005b8381101561169c57815161ffff168752958201959082019060010161167c565b509495945050505050565b600081518084526020808501945080840160005b8381101561169c57815163ffffffff16875295820195908201906001016116bb565b6001600160a01b038b811682528a81166020808401919091528a82166040840152606083018a905263ffffffff8916608084015261014060a0840181905288519084018190526000926101608501928a810192855b81811015611750578451841686529482019493820193600101611732565b50505050508660c084015261176b60e084018761ffff169052565b82810361010084015261177e8186611668565b905082810361012084015261179381856116a7565b9d9c50505050505050505050505050565b6001600160601b0319606093841b811682529190921b16601482015260280190565b60005b838110156117e15781810151838201526020016117c9565b50506000910152565b600081518084526118028160208601602086016117c6565b601f01601f19169290920160200192915050565b60608152600061182960608301866117ea565b6020830194909452506001600160a01b0391909116604090910152919050565b60006020828403121561185b57600080fd5b8151611348816112cd565b60006020828403121561187857600080fd5b8151801515811461134857600080fd5b6000825161189a8184602087016117c6565b9190910192915050565b60208152600061134860208301846117ea56fecf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca312a26469706673582212202fe4e18531c5fa9c2140af1f3c5bca1c7a1822bdd1c19b4d4eec1202e27aa15164736f6c63430008120033";

type ElkV2FarmFactoryConstructorParams =
  | [linkLibraryAddresses: ElkV2FarmFactoryLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ElkV2FarmFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ElkV2FarmFactory__factory extends ContractFactory {
  constructor(...args: ElkV2FarmFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ElkV2FarmFactory__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ElkV2FarmFactoryLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7dc177069a0b4ab33f32b489c699f21ff2\\$__", "g"),
      linkLibraryAddresses[
        "contracts/ElkV2FactoryHelper.sol:ElkV2FactoryHelper"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$55b9252869ae896c9530f1d5eaf00930c4\\$__", "g"),
      linkLibraryAddresses[
        "contracts/ElkV2FactoryHelperPermissioned.sol:ElkV2FactoryHelperPermissioned"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _oracleAddresses: AddressLike[],
    _feeToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _oracleAddresses,
      _feeToken,
      overrides || {}
    );
  }
  override deploy(
    _oracleAddresses: AddressLike[],
    _feeToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _oracleAddresses,
      _feeToken,
      overrides || {}
    ) as Promise<
      ElkV2FarmFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ElkV2FarmFactory__factory {
    return super.connect(runner) as ElkV2FarmFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ElkV2FarmFactoryInterface {
    return new Interface(_abi) as ElkV2FarmFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ElkV2FarmFactory {
    return new Contract(address, _abi, runner) as unknown as ElkV2FarmFactory;
  }
}

export interface ElkV2FarmFactoryLibraryAddresses {
  ["contracts/ElkV2FactoryHelper.sol:ElkV2FactoryHelper"]: string;
  ["contracts/ElkV2FactoryHelperPermissioned.sol:ElkV2FactoryHelperPermissioned"]: string;
}
