/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../common";
import type {
  StakingFee,
  StakingFeeInterface,
} from "../../contracts/StakingFee";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingTokenAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_depositFeeBps",
        type: "uint16",
      },
      {
        internalType: "uint16[]",
        name: "_withdrawalFeesBps",
        type: "uint16[]",
      },
      {
        internalType: "uint32[]",
        name: "_withdrawalFeeSchedule",
        type: "uint32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "DepositFeesCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "FeesRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "_depositFeeBps",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16[]",
        name: "_withdrawalFeesBps",
        type: "uint16[]",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "_feeSchedule",
        type: "uint32[]",
      },
    ],
    name: "FeesSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "WithdrawalFeesCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collectedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_depositAmount",
        type: "uint256",
      },
    ],
    name: "depositFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositFeeBps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feesUnit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "recoverFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userLastStakedTime",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_withdrawalAmount",
        type: "uint256",
      },
    ],
    name: "withdrawalFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdrawalFeeSchedule",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdrawalFeesBps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620017e0380380620017e0833981016040819052620000349162000545565b600160005583620000453362000133565b6001600160a01b038116620000865760405162461bcd60e51b8152602060048201526002602482015261453160f01b60448201526064015b60405180910390fd5b6001600160a01b03811660808190526040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015620000d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000f7919062000648565b6200010490600a62000789565b6200011890670de0b6b3a76400006200079a565b600455506200012983838362000185565b505050506200089d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b81518151148015620001995750600a815111155b8015620001ac57506107d08361ffff1611155b620001df5760405162461bcd60e51b8152602060048201526002602482015261453560f01b60448201526064016200007d565b600080620001f16107d06001620007bd565b905060005b83518110156200030a578263ffffffff168482815181106200021c576200021c620007d3565b602002602001015163ffffffff16116200025e5760405162461bcd60e51b8152602060048201526002602482015261453760f01b60448201526064016200007d565b81858281518110620002745762000274620007d3565b602002602001015161ffff1610620002b45760405162461bcd60e51b815260206004820152600260248201526108a760f31b60448201526064016200007d565b838181518110620002c957620002c9620007d3565b60200260200101519250848181518110620002e857620002e8620007d3565b602002602001015161ffff169150806200030290620007e9565b9050620001f6565b5082516200032090600590602086019062000384565b50835162000336906006906020870190620003dc565b5061ffff85166007556040517fab4c36b25b04e6f8ac9915203aba1048c17841782324a583e98128b8c1c964f390620003759087908790879062000805565b60405180910390a15050505050565b828054828255906000526020600020908101928215620003ca579160200282015b82811115620003ca578251829063ffffffff16905591602001919060010190620003a5565b50620003d892915062000420565b5090565b828054828255906000526020600020908101928215620003ca579160200282015b82811115620003ca578251829061ffff16905591602001919060010190620003fd565b5b80821115620003d8576000815560010162000421565b805161ffff811681146200044a57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156200049057620004906200044f565b604052919050565b60006001600160401b03821115620004b457620004b46200044f565b5060051b60200190565b600082601f830112620004d057600080fd5b81516020620004e9620004e38362000498565b62000465565b82815260059290921b840181019181810190868411156200050957600080fd5b8286015b848110156200053a57805163ffffffff811681146200052c5760008081fd5b83529183019183016200050d565b509695505050505050565b600080600080608085870312156200055c57600080fd5b84516001600160a01b03811681146200057457600080fd5b935060206200058586820162000437565b60408701519094506001600160401b0380821115620005a357600080fd5b818801915088601f830112620005b857600080fd5b8151620005c9620004e38262000498565b81815260059190911b8301840190848101908b831115620005e957600080fd5b938501935b828510156200061257620006028562000437565b82529385019390850190620005ee565b60608b015190975094505050808311156200062c57600080fd5b50506200063c87828801620004be565b91505092959194509250565b6000602082840312156200065b57600080fd5b815160ff811681146200066d57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620006cb578160001904821115620006af57620006af62000674565b80851615620006bd57918102915b93841c93908002906200068f565b509250929050565b600082620006e45750600162000783565b81620006f35750600062000783565b81600181146200070c5760028114620007175762000737565b600191505062000783565b60ff8411156200072b576200072b62000674565b50506001821b62000783565b5060208310610133831016604e8410600b84101617156200075c575081810a62000783565b6200076883836200068a565b80600019048211156200077f576200077f62000674565b0290505b92915050565b60006200066d60ff841683620006d3565b600082620007b857634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111562000783576200078362000674565b634e487b7160e01b600052603260045260246000fd5b600060018201620007fe57620007fe62000674565b5060010190565b60006060820161ffff80871684526020606081860152828751808552608087019150828901945060005b818110156200084f5785518516835294830194918301916001016200082f565b5050858103604087015286518082529082019350915080860160005b838110156200088f57815163ffffffff16855293820193908201906001016200086b565b509298975050505050505050565b608051610f0b620008d5600039600081816101a1015281816102b2015281816104620152818161064401526107400152610f0b6000f3fe608060405234801561001057600080fd5b50600436106100fc5760003560e01c806301f59d16146101015780631171bda91461011d57806318160ddd1461013257806327e235e31461013b5780632e1a7d4d1461015b578063423c485a1461016e57806354feec3e14610181578063715018a61461019457806372f702f31461019c5780637aaeaf7f146101db5780637beb3d9f146101ee57806387e7ed3a146101f75780638da5cb5b1461020a5780639003adfe146102125780639e3582c81461021b578063a694fc3a1461022e578063a7309d7d14610241578063ab8798271461027c578063e9fad8ee14610285578063f2fde38b1461028d575b600080fd5b61010a6107d081565b6040519081526020015b60405180910390f35b61013061012b366004610cfb565b6102a0565b005b61010a60025481565b61010a610149366004610d37565b60036020526000908152604090205481565b610130610169366004610d59565b61038d565b61010a61017c366004610d59565b6104cd565b61010a61018f366004610d59565b610500565b610130610521565b6101c37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610114565b61010a6101e9366004610d72565b610535565b61010a61271081565b610130610205366004610d37565b6105eb565b6101c3610676565b61010a60085481565b61010a610229366004610d59565b610685565b61013061023c366004610d59565b610695565b61026761024f366004610d37565b60096020526000908152604090205463ffffffff1681565b60405163ffffffff9091168152602001610114565b61010a60075481565b61013061079a565b61013061029b366004610d37565b6107b3565b6102a8610829565b6102b0610882565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03160361031b5760405162461bcd60e51b8152602060048201526002602482015261114d60f21b60448201526064015b60405180910390fd5b826103306001600160a01b03821684846108e1565b826001600160a01b0316846001600160a01b03167ffff3b3844276f57024e0b42afec1a37f75db36511e43819a4f2a63ab7862b6488460405161037591815260200190565b60405180910390a3506103886001600055565b505050565b610395610829565b806103a03382610944565b91506000821180156103c15750336000908152600360205260409020548211155b80156103dc5750336000908152600360205260409020548111155b61040d5760405162461bcd60e51b8152602060048201526002602482015261453360f01b6044820152606401610312565b60045461041a9082610db2565b6002600082825461042b9190610dc9565b9091555050336000908152600360205260408120805483929061044f908490610dc9565b9091555061048990506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633846108e1565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a2506104ca6001600055565b50565b600080600754116104df5760006104fa565b612710600754836104f09190610db2565b6104fa9190610ddc565b92915050565b6005818154811061051057600080fd5b600091825260209091200154905081565b610529610882565b61053360006109cb565b565b6001600160a01b03821660009081526009602052604081205481906105609063ffffffff1642610dc9565b90506000805b6005548110156105e2576005818154811061058357610583610dfe565b90600052602060002001548310156105d257612710600682815481106105ab576105ab610dfe565b9060005260206000200154866105c19190610db2565b6105cb9190610ddc565b91506105e2565b6105db81610e14565b9050610566565b50949350505050565b6105f3610882565b6105fb610829565b6008805460009091556040518181527f6857c770f3cb43e9c19050a37dd914ec876241c1f4b487d26a1d4f5d3054f49b9060200160405180910390a161066b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683836108e1565b506104ca6001600055565b6001546001600160a01b031690565b6006818154811061051057600080fd5b61069d610829565b806106a83382610a1d565b91506000821180156106ba5750600081115b6106eb5760405162461bcd60e51b8152602060048201526002602482015261229960f11b6044820152606401610312565b6004546106f89083610db2565b600260008282546107099190610e2d565b9091555050336000908152600360205260408120805484929061072d908490610e2d565b9091555061076890506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610aae565b60405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906020016104b7565b336000908152600360205260409020546105339061038d565b6107bb610882565b6001600160a01b0381166108205760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610312565b6104ca816109cb565b60026000540361087b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610312565b6002600055565b3361088b610676565b6001600160a01b0316146105335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610312565b6040516001600160a01b03831660248201526044810182905261038890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610aec565b6000806109518484610535565b905080156109b057806008600082825461096b9190610e2d565b90915550506040518181526001600160a01b038516907fd0b34aaed5c558a8df736a5aaf9a49b539c4e86fb3ee5a1ac76e0bec23cbdd03906020015b60405180910390a25b6109c3846109be8386610dc9565b919050565b949350505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080610a29836104cd565b6001600160a01b0385166000908152600960205260409020805463ffffffff19164263ffffffff16179055905080156109b0578060086000828254610a6e9190610e2d565b90915550506040518181526001600160a01b038516907f34f2a7363b1ef64b0b62a223c88cf3f54a68686acfcb9531d7deb46004f37c46906020016109a7565b6040516001600160a01b0380851660248301528316604482015260648101829052610ae69085906323b872dd60e01b9060840161090d565b50505050565b6000610b41826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610bc19092919063ffffffff16565b9050805160001480610b62575080806020019051810190610b629190610e40565b6103885760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610312565b60606109c3848460008585600080866001600160a01b03168587604051610be89190610e86565b60006040518083038185875af1925050503d8060008114610c25576040519150601f19603f3d011682016040523d82523d6000602084013e610c2a565b606091505b5091509150610c3b87838387610c46565b979650505050505050565b60608315610cb5578251600003610cae576001600160a01b0385163b610cae5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610312565b50816109c3565b6109c38383815115610cca5781518083602001fd5b8060405162461bcd60e51b81526004016103129190610ea2565b80356001600160a01b03811681146109be57600080fd5b600080600060608486031215610d1057600080fd5b610d1984610ce4565b9250610d2760208501610ce4565b9150604084013590509250925092565b600060208284031215610d4957600080fd5b610d5282610ce4565b9392505050565b600060208284031215610d6b57600080fd5b5035919050565b60008060408385031215610d8557600080fd5b610d8e83610ce4565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176104fa576104fa610d9c565b818103818111156104fa576104fa610d9c565b600082610df957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201610e2657610e26610d9c565b5060010190565b808201808211156104fa576104fa610d9c565b600060208284031215610e5257600080fd5b81518015158114610d5257600080fd5b60005b83811015610e7d578181015183820152602001610e65565b50506000910152565b60008251610e98818460208701610e62565b9190910192915050565b6020815260008251806020840152610ec1816040850160208701610e62565b601f01601f1916919091016040019291505056fea2646970667358221220eaca0974706542b3b1a0b88ef98ea604e1c384bf494ba3a51fe9dcca7c0a93f664736f6c63430008120033";

type StakingFeeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingFeeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingFee__factory extends ContractFactory {
  constructor(...args: StakingFeeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _stakingTokenAddress: AddressLike,
    _depositFeeBps: BigNumberish,
    _withdrawalFeesBps: BigNumberish[],
    _withdrawalFeeSchedule: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _stakingTokenAddress,
      _depositFeeBps,
      _withdrawalFeesBps,
      _withdrawalFeeSchedule,
      overrides || {}
    );
  }
  override deploy(
    _stakingTokenAddress: AddressLike,
    _depositFeeBps: BigNumberish,
    _withdrawalFeesBps: BigNumberish[],
    _withdrawalFeeSchedule: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _stakingTokenAddress,
      _depositFeeBps,
      _withdrawalFeesBps,
      _withdrawalFeeSchedule,
      overrides || {}
    ) as Promise<
      StakingFee & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StakingFee__factory {
    return super.connect(runner) as StakingFee__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingFeeInterface {
    return new Interface(_abi) as StakingFeeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): StakingFee {
    return new Contract(address, _abi, runner) as unknown as StakingFee;
  }
}
