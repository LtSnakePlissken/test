/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000e6438038062000e64833981016040819052620000349162000172565b6001600055620000443362000120565b6001600160a01b038116620000845760405162461bcd60e51b8152602060048201526002602482015261453160f01b604482015260640160405180910390fd5b6001600160a01b03811660808190526040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015620000cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000f59190620001a4565b6200010290600a620002de565b6200011690670de0b6b3a7640000620002ef565b6004555062000312565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200018557600080fd5b81516001600160a01b03811681146200019d57600080fd5b9392505050565b600060208284031215620001b757600080fd5b815160ff811681146200019d57600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000220578160001904821115620002045762000204620001c9565b808516156200021257918102915b93841c9390800290620001e4565b509250929050565b6000826200023957506001620002d8565b816200024857506000620002d8565b81600181146200026157600281146200026c576200028c565b6001915050620002d8565b60ff841115620002805762000280620001c9565b50506001821b620002d8565b5060208310610133831016604e8410600b8410161715620002b1575081810a620002d8565b620002bd8383620001df565b8060001904821115620002d457620002d4620001c9565b0290505b92915050565b60006200019d60ff84168362000228565b6000826200030d57634e487b7160e01b600052601260045260246000fd5b500490565b608051610b2162000343600039600081816101040152818161018601528181610336015261046f0152610b216000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c80631171bda91461009357806318160ddd146100a857806327e235e3146100c45780632e1a7d4d146100e4578063715018a6146100f757806372f702f3146100ff5780638da5cb5b1461013e578063a694fc3a14610146578063e9fad8ee14610159578063f2fde38b14610161575b600080fd5b6100a66100a136600461098c565b610174565b005b6100b160025481565b6040519081526020015b60405180910390f35b6100b16100d23660046109c8565b60036020526000908152604090205481565b6100a66100f23660046109ea565b610261565b6100a66103a1565b6101267f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100bb565b6101266103b5565b6100a66101543660046109ea565b6103c4565b6100a66104c9565b6100a661016f3660046109c8565b6104e2565b61017c610558565b6101846105b1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316036101ef5760405162461bcd60e51b8152602060048201526002602482015261114d60f21b60448201526064015b60405180910390fd5b826102046001600160a01b0382168484610610565b826001600160a01b0316846001600160a01b03167ffff3b3844276f57024e0b42afec1a37f75db36511e43819a4f2a63ab7862b6488460405161024991815260200190565b60405180910390a35061025c6001600055565b505050565b610269610558565b806102743382610673565b91506000821180156102955750336000908152600360205260409020548211155b80156102b05750336000908152600360205260409020548111155b6102e15760405162461bcd60e51b8152602060048201526002602482015261453360f01b60448201526064016101e6565b6004546102ee9082610a19565b600260008282546102ff9190610a30565b90915550503360009081526003602052604081208054839290610323908490610a30565b9091555061035d90506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163384610610565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a25061039e6001600055565b50565b6103a96105b1565b6103b3600061067b565b565b6001546001600160a01b031690565b6103cc610558565b806103d73382610673565b91506000821180156103e95750600081115b61041a5760405162461bcd60e51b8152602060048201526002602482015261229960f11b60448201526064016101e6565b6004546104279083610a19565b600260008282546104389190610a43565b9091555050336000908152600360205260408120805484929061045c908490610a43565b9091555061049790506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846106cd565b60405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200161038b565b336000908152600360205260409020546103b390610261565b6104ea6105b1565b6001600160a01b03811661054f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101e6565b61039e8161067b565b6002600054036105aa5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101e6565b6002600055565b336105ba6103b5565b6001600160a01b0316146103b35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101e6565b6040516001600160a01b03831660248201526044810182905261025c90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261070b565b805b92915050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526107059085906323b872dd60e01b9060840161063c565b50505050565b6000610760826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107e09092919063ffffffff16565b90508051600014806107815750808060200190518101906107819190610a56565b61025c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101e6565b60606107ef84846000856107f7565b949350505050565b6060824710156108585760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101e6565b600080866001600160a01b031685876040516108749190610a9c565b60006040518083038185875af1925050503d80600081146108b1576040519150601f19603f3d011682016040523d82523d6000602084013e6108b6565b606091505b50915091506108c7878383876108d2565b979650505050505050565b6060831561094157825160000361093a576001600160a01b0385163b61093a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101e6565b50816107ef565b6107ef83838151156109565781518083602001fd5b8060405162461bcd60e51b81526004016101e69190610ab8565b80356001600160a01b038116811461098757600080fd5b919050565b6000806000606084860312156109a157600080fd5b6109aa84610970565b92506109b860208501610970565b9150604084013590509250925092565b6000602082840312156109da57600080fd5b6109e382610970565b9392505050565b6000602082840312156109fc57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761067557610675610a03565b8181038181111561067557610675610a03565b8082018082111561067557610675610a03565b600060208284031215610a6857600080fd5b815180151581146109e357600080fd5b60005b83811015610a93578181015183820152602001610a7b565b50506000910152565b60008251610aae818460208701610a78565b9190910192915050565b6020815260008251806020840152610ad7816040850160208701610a78565b601f01601f1916919091016040019291505056fea2646970667358221220a889a9c759dea2261c32a74304a7dac5ecd412835607b3057a736085a15d417064736f6c63430008120033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _stakingTokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_stakingTokenAddress, overrides || {});
  }
  override deploy(
    _stakingTokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_stakingTokenAddress, overrides || {}) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
